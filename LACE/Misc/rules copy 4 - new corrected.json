{
  "library_metadata": {
    "version": "1.0",
    "last_updated": "2025-02-22 16:00:00",
    "description": "Lace Rule Library"
  },
  "rules": [
    {
      "name": "Test Rule",
      "type": "TestRule",
      "category": "Basic",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "A test rule demonstrating core cellular automata principles with configurable parameters for state transitions and edge formation.",
      "tags": [
        "test",
        "basic",
        "educational"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "min_active_neighbors": 2,
        "max_active_neighbors": 5,
        "min_connected_active": 2,
        "max_connected_active": 4,
        "birth_min_neighbors": 3,
        "birth_max_neighbors": 5,
        "birth_min_connected": 2,
        "birth_max_connected": 4,
        "use_edge_density": true,
        "death_edge_density": 0.8,
        "birth_edge_density": 0.6,
        "use_entropy": true,
        "death_entropy_threshold": 0.2,
        "birth_entropy_threshold": 0.3,
        "use_random_death": true,
        "death_probability": 0.05,
        "edge_formation_rate": 0.3,
        "edge_removal_rate": 0.2,
        "min_shared_neighbors": 2,
        "max_edges_per_node": 6,
        "min_edges_per_node": 2,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Edge Count Matching Rule",
      "type": "EdgeCountMatchingRule",
      "category": "Network",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Nodes try to match the average number of edges of their neighbors.",
      "tags": [
        "network",
        "edge-count",
        "matching"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "activation_threshold": 0.4,
        "edge_match_tolerance": 0.2,
        "connect_probability": 0.7,
        "disconnect_probability": 0.1,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Preferential Attachment Rule",
      "type": "PreferentialAttachmentRule",
      "category": "Network",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Nodes preferentially connect to neighbors with similar, lower, or higher degree, promoting balanced or unbalanced networks.",
      "tags": [
        "network",
        "preferential attachment",
        "degree"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "activation_threshold": 0.3,
        "min_connections": 1,
        "max_connections": 8,
        "connection_preference": "similar",
        "similarity_tolerance": 2,
        "connect_probability": 0.6,
        "disconnect_probability": 0.1,
        "min_shared_neighbors": 1,
        "tiebreaker_type": "RANDOM",
        "deactivation_threshold": 0.0
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "State-Dependent Edge Angle Rule",
      "type": "StateDependentEdgeAngleRule",
      "category": "Geometric",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Creates connections based on node state and relative angles, allowing for multiple angle preferences.",
      "tags": [
        "geometric",
        "angles",
        "state-dependent"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "activation_threshold": 0.4,
        "active_angle_1": 45.0,
        "active_tolerance_1": 15.0,
        "active_angle_2": 135.0,
        "active_tolerance_2": 15.0,
        "inactive_angle_1": 225.0,
        "inactive_tolerance_1": 15.0,
        "inactive_angle_2": 315.0,
        "inactive_tolerance_2": 15.0,
        "connect_probability": 0.7,
        "disconnect_probability": 0.1,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Neighborhood State Matching Rule",
      "type": "NeighborhoodStateMatchingRule",
      "category": "Network",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Connects nodes based on the similarity of the average states of their neighborhoods.",
      "tags": [
        "network",
        "state-matching",
        "neighborhood"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "activation_threshold": 0.6,
        "state_match_threshold": 0.2,
        "connect_probability": 0.7,
        "disconnect_probability": 0.1,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Combined Metric Rule",
      "type": "CombinedMetricRule",
      "category": "Network",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Uses a weighted combination of local and neighbor metrics to determine node states and edge connections.",
      "tags": [
        "network",
        "metrics",
        "combined"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "active_neighbor_ratio_weight": 0.4,
        "average_neighbor_degree_weight": 0.3,
        "clustering_coefficient_weight": 0.3,
        "activation_threshold": 0.6,
        "connect_threshold": 0.7,
        "disconnect_threshold": 0.3,
        "self_edge_density_weight": 0.4,
        "neighbor_edge_density_weight": 0.4,
        "shared_neighbors_weight": 0.2,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Majority Rule",
      "type": "MajorityRule",
      "category": "Basic",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Creates patterns based on majority/minority relationships between nodes. Nodes activate or deactivate based on the ratio of active neighbors and their connections.",
      "tags": [
        "majority",
        "basic",
        "voting"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "activation_threshold": 0.6,
        "deactivation_threshold": 0.4,
        "birth_threshold": 0.5,
        "death_threshold": 0.3,
        "use_edge_density": true,
        "max_edge_density": 0.8,
        "min_edge_density": 0.2,
        "use_clustering": true,
        "min_clustering": 0.3,
        "max_clustering": 0.8,
        "min_connections": 2,
        "max_connections": 6,
        "edge_formation_rate": 0.3,
        "edge_removal_rate": 0.2,
        "min_shared_neighbors": 2,
        "use_state_matching": true,
        "state_match_bonus": 0.2,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "ConnectLife",
      "type": "ConnectLife",
      "category": "Basic",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Creates connected structures with dynamic edge formation",
      "tags": [
        "life",
        "connections",
        "dynamic"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": null,
      "parent_rule": null,
      "position": 1,
      "params": {
        "state_rule_table": {
          "(0, 11100000, 11100000)": 1,
          "(0, 11110000, 11110000)": 1,
          "(1, 11000000, 11000000)": 1,
          "(1, 11100000, 11100000)": 1,
          "(1, 11110000, 11110000)": 1,
          "(1, 11111000, 11111000)": 1,
          "default": 0
        },
        "edge_rule_table": {
          "(1, 1, 11100000)": "add",
          "(1, 1, 11110000)": "maintain",
          "(1, 1, 11111000)": "maintain",
          "(1, 1, 11111100)": "remove",
          "default": "maintain"
        },
        "min_connections": 2,
        "max_connections": 6,
        "min_shared_neighbors": 2,
        "use_clustering": true,
        "min_clustering": 0.2,
        "max_clustering": 0.8,
        "use_entropy": true,
        "min_entropy": 0.3,
        "max_entropy": 0.7,
        "edge_memory": 3,
        "state_memory": 3,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Life and Death",
      "type": "LifeAndDeath",
      "category": "Basic",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Creates complex patterns through detailed birth/death dynamics with multiple factors influencing state transitions and edge formation.",
      "tags": [
        "life",
        "death",
        "complex"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "survival_min_active": 2,
        "survival_max_active": 5,
        "survival_min_connected": 2,
        "survival_max_connected": 4,
        "birth_min_active": 3,
        "birth_max_active": 5,
        "birth_min_connected": 2,
        "birth_max_connected": 4,
        "use_edge_density": true,
        "survival_min_density": 0.2,
        "survival_max_density": 0.8,
        "birth_min_density": 0.3,
        "birth_max_density": 0.7,
        "use_clustering": true,
        "survival_min_clustering": 0.3,
        "survival_max_clustering": 0.8,
        "birth_min_clustering": 0.2,
        "birth_max_clustering": 0.7,
        "use_entropy": true,
        "survival_min_entropy": 0.3,
        "survival_max_entropy": 0.8,
        "birth_min_entropy": 0.2,
        "birth_max_entropy": 0.7,
        "edge_formation_rate": 0.3,
        "edge_removal_rate": 0.2,
        "min_edges": 2,
        "max_edges": 6,
        "min_shared_neighbors": 2,
        "use_random_death": true,
        "death_probability": 0.05,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Network Life",
      "type": "NetworkLife",
      "category": "Advanced",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "A Life variant based on connection counts and neighbor states",
      "tags": [
        "life",
        "network"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "activation_threshold": 0.4,
        "deactivation_threshold": 0.3,
        "min_connections": 2,
        "max_connections": 6,
        "connection_preference": "similar",
        "similarity_tolerance": 2,
        "min_shared_neighbors": 2,
        "use_clustering": true,
        "min_clustering": 0.3,
        "max_clustering": 0.8,
        "use_betweenness": true,
        "min_betweenness": 0.2,
        "max_betweenness": 0.8,
        "use_eigenvector": true,
        "min_eigenvector": 0.2,
        "max_eigenvector": 0.8,
        "use_random_death": true,
        "death_probability": 0.05,
        "connect_if_neighbor_connections_lt": 2,
        "connect_if_neighbor_connections_gt": 5,
        "connect_if_neighbor_connections_eq": 4,
        "disconnect_if_neighbor_connections_lt": 1,
        "disconnect_if_neighbor_connections_gt": 7,
        "disconnect_if_neighbor_connections_eq": null,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Neighbor Connections And States",
      "type": "NeighborConnections",
      "category": "Advanced",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Rule that uses connection counts, self state, and neighbor states to determine connections.",
      "tags": [
        "connections",
        "states"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "connections_for_high_state": 6,
        "connections_for_medium_state": 4,
        "connections_for_low_state": 2,
        "connect_if_self_state_gt": 0.5,
        "connect_if_self_state_lt": 0.2,
        "connect_if_self_state_eq": 1.0,
        "connect_if_neighbor_state_gt": 0.5,
        "connect_if_neighbor_state_lt": 0.2,
        "connect_if_neighbor_state_eq": 1.0,
        "connect_if_state_difference_gt": 0.3,
        "connect_if_state_difference_lt": 0.1,
        "connect_if_neighbor_connections_gt_self": true,
        "connect_if_neighbor_connections_lt_self": false,
        "connect_if_neighbor_connections_eq_self": true,
        "min_connections_allowed": 2,
        "max_connections_allowed": 7,
        "preferred_connection_range": [
          3,
          5
        ],
        "base_connection_probability": 0.7,
        "state_multiplier_effect": 0.2,
        "maintain_existing_if_stable": true,
        "prevent_isolation": true,
        "min_shared_neighbors": 1,
        "max_shared_neighbors": 5,
        "connection_distance_threshold": 2.0,
        "tiebreaker_type": "RANDOM",
        "state_rule_table": {
          "default": 0
        },
        "edge_rule_table": {
          "default": "maintain"
        },
        "birth_threshold": 0.4,
        "death_threshold": 0.2,
        "adaptation_rate": 0.1,
        "stability_threshold": 0.6,
        "use_clustering": true,
        "min_clustering": 0.2,
        "max_clustering": 0.8,
        "use_entropy": true,
        "min_entropy": 0.3,
        "max_entropy": 0.7,
        "edge_memory": 3,
        "state_memory": 3
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Adaptive Network Rule",
      "type": "AdaptiveNetworkRule",
      "category": "Advanced",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Creates adaptive networks based on local and global conditions",
      "tags": [
        "adaptive",
        "network",
        "dynamic"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "state_rule_table": {
          "(0, 11100000, 11100000)": 1,
          "(0, 11110000, 11110000)": 1,
          "(1, 11000000, 11000000)": 1,
          "(1, 11100000, 11100000)": 1,
          "(1, 11110000, 11110000)": 1,
          "(1, 11111000, 11111000)": 1,
          "default": 0
        },
        "edge_rule_table": {
          "(1, 1, 11100000)": "add",
          "(1, 1, 11110000)": "maintain",
          "(1, 1, 11111000)": "maintain",
          "(1, 1, 11111100)": "remove",
          "default": "maintain"
        },
        "min_connections": 2,
        "max_connections": 6,
        "min_shared_neighbors": 2,
        "birth_threshold": 0.4,
        "death_threshold": 0.2,
        "use_clustering": true,
        "min_clustering": 0.2,
        "max_clustering": 0.8,
        "use_entropy": true,
        "min_entropy": 0.3,
        "max_entropy": 0.7,
        "adaptation_rate": 0.2,
        "stability_threshold": 0.6,
        "edge_memory": 3,
        "state_memory": 3,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Pure Rule Table Rule",
      "type": "PureRuleTableRule",
      "category": "Rule Table",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "A pure rule table-driven cellular automaton that uses comprehensive rule tables for both state transitions and edge updates, based solely on local neighborhood patterns.",
      "tags": [
        "rule-table",
        "pattern-matching",
        "pure-logic"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "state_rule_table": {
          "(0, 11111111, 11111111)": 1,
          "(0, 11111110, 11111110)": 1,
          "(1, 11111111, 11111111)": 1,
          "(1, 00000000, 00000000)": 0,
          "default": 0
        },
        "edge_rule_table": {
          "(1, 1, 11111111)": "maintain",
          "(1, 1, 11111110)": "add",
          "(1, 1, 10000000)": "remove",
          "default": "maintain"
        },
        "state_memory": 3,
        "edge_memory": 3,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Stable Polygons",
      "type": "StablePolygons",
      "category": "Geometric",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Creates stable polygonal structures with slow growth",
      "tags": [
        "geometric",
        "polygons",
        "stable"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": null,
      "parent_rule": null,
      "position": 1,
      "params": {
        "min_active_neighbors": 2,
        "max_active_neighbors": 6,
        "target_neighbors": 6,
        "angle_tolerance": 0.2,
        "edge_length_variance": 0.2,
        "use_symmetry": true,
        "min_symmetry": 0.3,
        "max_symmetry": 0.9,
        "use_regularity": true,
        "min_regularity": 0.4,
        "max_regularity": 0.9,
        "growth_threshold": 0.4,
        "growth_rate": 0.3,
        "min_density": 0.2,
        "max_density": 0.8,
        "edge_formation_rate": 0.3,
        "edge_removal_rate": 0.2,
        "min_edges": 2,
        "max_edges": 6,
        "use_angle_preference": true,
        "preferred_angle": 1.0472,
        "angle_weight": 0.5,
        "use_random_death": true,
        "death_probability": 0.05,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Geometric Angle",
      "type": "GeometricAngle",
      "category": "Geometric",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Creates geometric patterns based on neighbor angles",
      "tags": [
        "geometric",
        "angles"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": null,
      "parent_rule": null,
      "position": 1,
      "params": {
        "target_neighbors": 6,
        "min_connections": 2,
        "max_connections": 8,
        "preferred_angle": 1.0472,
        "angle_tolerance": 0.2,
        "edge_length_variance": 0.2,
        "min_density": 0.2,
        "max_density": 0.8,
        "use_clustering": true,
        "min_clustering": 0.3,
        "edge_formation_rate": 0.3,
        "edge_removal_rate": 0.2,
        "min_shared_neighbors": 2,
        "angular_stability": 0.5,
        "angular_influence": 0.3,
        "prevent_isolation": true,
        "maintain_existing": true,
        "activation_threshold": 0.4,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Symmetry Rule",
      "type": "SymmetryRule",
      "category": "Geometric",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Creates and maintains symmetric patterns across multiple axes.",
      "tags": [
        "geometric",
        "symmetry"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "num_symmetry_axes": 4,
        "axis_angle_tolerance": 0.1,
        "symmetry_radius": 5,
        "symmetry_tolerance": 0.2,
        "min_symmetric_nodes": 4,
        "max_asymmetric_nodes": 2,
        "rotational_order": 4,
        "rotation_tolerance": 0.1,
        "pattern_density": 0.7,
        "pattern_scale": 1.0,
        "min_pattern_size": 10,
        "max_pattern_size": 50,
        "symmetry_break_threshold": 0.8,
        "break_probability": 0.1,
        "max_broken_duration": 10,
        "min_symmetric_connections": 2,
        "max_connections_per_axis": 4,
        "connection_angle_weight": 0.5,
        "maintain_existing_symmetry": true,
        "prevent_isolation": true,
        "min_connections": 2,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Fractal Rule",
      "type": "FractalRule",
      "category": "Geometric",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Creates self-similar patterns at different scales",
      "tags": [
        "geometric",
        "fractal"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": null,
      "parent_rule": null,
      "position": 1,
      "params": {
        "min_pattern_size": 3,
        "max_pattern_size": 12,
        "target_branching": 3,
        "max_recursion_depth": 4,
        "min_scale": 0.5,
        "max_scale": 4.0,
        "scale_ratio": 1.618,
        "scale_tolerance": 0.2,
        "min_self_similarity": 0.6,
        "similarity_threshold": 0.7,
        "similarity_tolerance": 0.2,
        "target_dimension": 1.6,
        "dimension_tolerance": 0.2,
        "dimension_weight": 0.5,
        "min_branching_score": 0.4,
        "branching_tolerance": 0.2,
        "branch_angle_variance": 0.2,
        "formation_threshold": 0.5,
        "recursion_threshold": 0.7,
        "pattern_merge_threshold": 0.8,
        "min_pattern_stability": 0.5,
        "stability_threshold": 0.6,
        "stability_tolerance": 0.2,
        "maintain_symmetry": true,
        "min_symmetry": 0.4,
        "prevent_pattern_collapse": true,
        "min_pattern_connections": 2,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Modular Rule",
      "type": "ModularRule",
      "category": "Network",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Creates distinct functional modules",
      "tags": [
        "network",
        "modular"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": null,
      "parent_rule": null,
      "position": 1,
      "params": {
        "min_module_size": 5,
        "max_module_size": 20,
        "optimal_module_size": 10,
        "min_internal_density": 0.6,
        "max_external_density": 0.3,
        "core_node_ratio": 0.4,
        "boundary_node_ratio": 0.3,
        "bridge_node_ratio": 0.3,
        "specialization_rate": 0.1,
        "max_specialization": 0.8,
        "specialization_threshold": 0.6,
        "inter_module_connection_rate": 0.2,
        "max_connected_modules": 4,
        "min_module_connections": 2,
        "module_formation_threshold": 0.7,
        "module_merge_threshold": 0.8,
        "module_split_threshold": 0.2,
        "stability_threshold": 0.7,
        "adaptation_rate": 0.1,
        "maintain_module_integrity": true,
        "prevent_module_isolation": true,
        "min_module_connections_internal": 3,
        "same_level_density": 0.5,
        "up_connection_density": 0.3,
        "down_connection_density": 0.2,
        "min_connections_per_level": 1,
        "max_connections_per_level": 4,
        "up_influence_weight": 0.3,
        "down_influence_weight": 0.3,
        "same_level_weight": 0.4,
        "activation_threshold": 0.5,
        "deactivation_threshold": 0.3,
        "level_activation_bonus": 0.1,
        "level_up_threshold": 0.7,
        "level_down_threshold": 0.3,
        "level_change_probability": 0.1,
        "maintain_level_diversity": true,
        "prevent_level_isolation": true,
        "min_level_connections": 1,
        "connection_stability_bonus": 0.1,
        "level_stability_threshold": 0.6,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Flow Rule",
      "type": "FlowRule",
      "category": "Network",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Creates structures optimized for directional flow",
      "tags": [
        "network",
        "flow"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": null,
      "parent_rule": null,
      "position": 1,
      "params": {
        "flow_alignment_threshold": 0.7,
        "flow_direction_weight": 0.6,
        "flow_variation_tolerance": 0.2,
        "min_path_capacity": 0.3,
        "max_path_capacity": 0.9,
        "optimal_capacity": 0.6,
        "max_bottleneck_severity": 0.4,
        "min_path_redundancy": 0.3,
        "bottleneck_threshold": 0.5,
        "max_pressure_difference": 0.2,
        "pressure_equalization_rate": 0.1,
        "pressure_threshold": 0.4,
        "path_optimization_rate": 0.2,
        "path_efficiency_threshold": 0.7,
        "alternative_path_weight": 0.4,
        "min_flow_stability": 0.6,
        "stability_threshold": 0.8,
        "flow_adaptation_rate": 0.1,
        "maintain_critical_paths": true,
        "prevent_flow_disruption": true,
        "min_flow_connections": 2,
        "activation_threshold": 0.5,
        "deactivation_threshold": 0.3,
        "edge_formation_rate": 0.3,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Competitive Rule",
      "type": "CompetitiveRule",
      "category": "Network",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2025-02-22",
      "date_modified": "2025-02-22",
      "version": "1.0",
      "description": "Creates structures based on competition for resources",
      "tags": [
        "network",
        "competition"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": null,
      "parent_rule": null,
      "position": 1,
      "params": {
        "min_territory_size": 5,
        "max_territory_size": 20,
        "optimal_territory_size": 10,
        "territory_spacing": 1.0,
        "min_resource_level": 0.2,
        "optimal_resource_level": 0.7,
        "resource_decay_rate": 0.1,
        "competition_threshold": 0.7,
        "competitive_advantage_threshold": 0.2,
        "territory_defense_threshold": 0.5,
        "alliance_formation_threshold": 0.8,
        "max_alliances": 3,
        "alliance_strength_weight": 0.4,
        "expansion_threshold": 0.6,
        "max_expansion_rate": 0.3,
        "min_expansion_stability": 0.5,
        "min_stability_threshold": 0.4,
        "stability_bonus_threshold": 0.6,
        "stability_decay_rate": 0.05,
        "maintain_core_territory": true,
        "prevent_territory_collapse": true,
        "min_territory_connections": 2,
        "edge_formation_rate": 0.3,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Adaptive Memory Rule",
      "type": "AdaptiveMemoryRule",
      "category": "Network",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Creates structures that can remember and recreate previous patterns",
      "tags": [
        "network",
        "memory"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": null,
      "parent_rule": null,
      "position": 1,
      "params": {
        "max_patterns": 10,
        "min_pattern_size": 3,
        "max_pattern_size": 8,
        "pattern_match_threshold": 0.7,
        "pattern_completion_threshold": 0.6,
        "min_pattern_stability": 0.4,
        "memory_decay_rate": 0.1,
        "reinforcement_rate": 0.2,
        "pattern_influence_rate": 0.3,
        "new_pattern_threshold": 0.8,
        "pattern_merge_threshold": 0.85,
        "pattern_split_threshold": 0.3,
        "reconstruction_strength": 0.6,
        "completion_influence": 0.4,
        "partial_match_threshold": 0.5,
        "adaptation_rate": 0.2,
        "novelty_threshold": 0.3,
        "stability_threshold": 0.6,
        "maintain_stable_patterns": true,
        "prevent_pattern_decay": true,
        "min_pattern_connections": 2,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    },
    {
      "name": "Artificial Life Rule",
      "type": "ArtificialLifeRule",
      "category": "Biological",
      "author": "Nova Spivack",
      "url": "https://novaspivack.com/network_automata",
      "email": "novaspivackrelay @ gmail . com",
      "date_created": "2024-01-01",
      "date_modified": "2024-01-01",
      "version": "1.0",
      "description": "Creates evolving organisms with metabolism, reproduction, and adaptation",
      "tags": [
        "biological",
        "life"
      ],
      "dimension_compatibility": [
        "TWO_D",
        "THREE_D"
      ],
      "neighborhood_compatibility": [
        "MOORE",
        "VON_NEUMANN",
        "HEX",
        "HEX_PRISM"
      ],
      "parent_rule": null,
      "position": 1,
      "params": {
        "base_metabolism": 0.1,
        "max_metabolism": 0.5,
        "energy_transfer_rate": 0.2,
        "min_survival_energy": 0.3,
        "reproduction_threshold": 0.8,
        "min_reproduction_age": 50,
        "max_reproduction_size": 100,
        "offspring_energy_ratio": 0.5,
        "base_mutation_rate": 0.01,
        "max_mutation_rate": 0.1,
        "mutation_effect_size": 0.1,
        "beneficial_mutation_bias": 0.6,
        "min_adaptation_score": 0.4,
        "adaptation_rate": 0.05,
        "phenotype_plasticity": 0.3,
        "environmental_sensitivity": 0.2,
        "min_organism_size": 5,
        "max_organism_size": 50,
        "optimal_organism_size": 20,
        "max_organism_age": 500,
        "specialization_threshold": 0.7,
        "membrane_ratio": 0.2,
        "core_cell_ratio": 0.6,
        "interaction_range": 5,
        "competition_strength": 0.3,
        "cooperation_bonus": 0.1,
        "maintain_integrity": true,
        "prevent_fragmentation": true,
        "min_connected_cells": 3,
        "tiebreaker_type": "RANDOM"
      },
      "rating": null,
      "notes": null
    }
  ]
}